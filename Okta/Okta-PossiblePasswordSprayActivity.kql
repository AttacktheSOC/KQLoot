This set queries is related the blog series "Staying a Step Ahead: Okta Password Spray Detection and Response Strategies" here:
https://www.attackthesoc.com/2024/03/staying-step-ahead-okta-password-spray.html

// Identify possible password spray activity
let knownIPs = dynamic(["8.8.8.8","1.1.2.2"]); 
//let knownIPs = (_GetWatchlist('trustedIP') | project IPAddress);
let pwdSprayActivity = OktaSSO
| where eventType_s =~ "user.session.start" and outcome_reason_s in ("VERIFICATION_ERROR", "INVALID_CREDENTIALS")
// let's get rid of trusted IP space
| where client_ipAddress_s !in (knownIPs)
| project TimeGenerated, outcome_reason_s, actor_alternateId_s, client_ipAddress_s, client_userAgent_rawUserAgent_s ;
pwdSprayActivity


------------------------------------------------------------------------------------------------------------------------------------------------------------


// Identify possible password spray activity and ensure the Invalid Credential errors are coming from new IPs and Devices
let knownIPs = dynamic([""]);
Okta_SSO
// pull in all the failed login attempts for valid user accounts when coming from a new IP and device and all Verification errors
| where eventType_s =~ "user.session.start" and (outcome_reason_s == "INVALID_CREDENTIALS" and parse_json(tostring(parse_json(debugContext_debugData_logOnlySecurityData_s).behaviors)).["New Device"] == "POSITIVE" and parse_json(tostring(parse_json(debugContext_debugData_logOnlySecurityData_s).behaviors)).["New IP"] == "POSITIVE") or outcome_reason_s == "VERIFICATION_ERROR"
// ignore fails coming from known safe IPs
| where client_ipAddress_s !in (knownIPs)
// ignore the Okta system service
| where actor_alternateId_s != @"system@okta.com"
| distinct client_ipAddress_s


------------------------------------------------------------------------------------------------------------------------------------------------------------


TOP-HITTERS: Identify the top hit users
*note: this query is resource intensive, scope it 

// Next let's see who our top hit users are. You may notice that a lot of users have the same number of hits and there's not just one person bubbling up.
// This just confirms what we already suspected. They're cycling through a list of users.
// Query to identify the top hit users
let knownIPs = dynamic([""]);
Okta_SSO
// pull in all the failed login attempts for valid user accounts when coming from a new IP and device and all Verification errors
| where eventType_s =~ "user.session.start" and (outcome_reason_s == "INVALID_CREDENTIALS" and parse_json(tostring(parse_json(debugContext_debugData_logOnlySecurityData_s).behaviors)).["New Device"] == "POSITIVE" and parse_json(tostring(parse_json(debugContext_debugData_logOnlySecurityData_s).behaviors)).["New IP"] == "POSITIVE") or outcome_reason_s == "VERIFICATION_ERROR"
// ignore fails coming from our IPs
| where client_ipAddress_s !in (knownIPs)
// ignore the Okta system service
| where actor_alternateId_s != @"system@okta.com"
// lets make sure we're matching attempts typed correctly with those which have another domain appended 
| extend actor_alternateId_s = tostring(split(actor_alternateId_s, "@", 0))
| top-hitters 10 of actor_alternateId_s // feel free to change that number up
//| top-hitters 10 of client_ipAddress_s 
//| top-hitters 10 of client_userAgent_rawUserAgent
//| top-hitters 10 of securityContext_asNumber_s


------------------------------------------------------------------------------------------------------------------------------------------------------------


